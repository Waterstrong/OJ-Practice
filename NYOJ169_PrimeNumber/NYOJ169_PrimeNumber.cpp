// NYOJ169_PrimeNumber.cpp : 定义控制台应用程序的入口点。
//
/*
素数
时间限制：3000 ms  |  内存限制：65535 KB
难度：1
描述
走进世博园某信息通信馆，参观者将获得前所未有的尖端互动体验，一场充满创想和喜悦的信息通信互动体验秀将以全新形式呈现，从观众踏入展馆的第一步起，就将与手持终端密不可分，人类未来梦想的惊喜从参观者的掌上展开。

在等候区的梦想花园中，参观者便开始了他们奇妙的体验之旅，等待中的游客可利用手机等终端参与互动小游戏，与梦想剧场内的虚拟人物Kr. Kong 进行猜数比赛。当屏幕出现一个整数X时，若你能比Kr. Kong更快的发出最接近它的素数答案，你将会获得一个意想不到的礼物。

例如：当屏幕出现22时，你的回答应是23；当屏幕出现8时，你的回答应是7；若X本身是素数，则回答X;若最接近X的素数有两个时，则回答大于它的素数。



输入
第一行：N 要竞猜的整数个数
接下来有N行，每行有一个正整数X
1<=N<=5 1<=X<=1000
输出
输出有N行，每行是对应X的最接近它的素数
样例输入
4
22
5
18
8
样例输出
23
5
19
7
来源
第三届河南省程序设计大赛
上传者
张云聪
*/
#include "stdafx.h"

#include <iostream>
#include <math.h>
using namespace std;

//#define N 100001
//bool prime[N];
//void ScreeningMethod()
//{
//	prime[0] = prime[1] = true;
//	int i, j;
//	for (i = 4; i < N; i+=2)
//	{
//		prime[i] = true;
//	}
//	for (i=3; i<=sqrt(double(N)); i+=2)
//	{
//		if(prime[i] == false)
//		{
//			for (j=i*2; j < N; j+=i)
//			{
//				prime[j] = true;
//			}
//		}
//	}
//	int cnt = 0;
//	for (i = 0; i < 1000; ++i)
//	{
//		if (!prime[i])
//		{
//			++cnt;
//			cout<<i<<" ";
//		}
//	}
//	cout<<endl;
//	cout<<cnt<<endl;
//}

bool Prime(int x)
{
	if (x == 1) // 0,1不是素数也不是合数
	{
		return false;
	}
	for (int i = 2; i <= sqrt(double(x)); ++i)
	{
		if (x%i == 0)
		{
			return false;
		}
	}
	return true;
}
int main()
{
	int num,i,j,x;
	cin>>num;
	while(num--)
	{
		cin>>x;
		if (Prime(x))
		{
			cout<<x<<endl;
		}
		else
		{
			for (i = x+1,j=x-1; ;++i,--j)
			{
				if (Prime(i))
				{
					cout<<i<<endl;
					break;
				}
				if (Prime(j))
				{
					cout<<j<<endl;
					break;
				}
			}
		}
	}
	return 0;
}

/*
最优程序
#include<iostream>
#include<algorithm>
using namespace std;
int prime[]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009};
int main()
{
	int n,m;
	cin>>n;
	while(n--)
	{
		cin>>m;
		if(m==1) {cout<<2<<endl;continue;}
		int* l=lower_bound(prime,prime+169,m);
		if(*l-m<=m-*(l-1)) cout<<*l<<endl;
		else cout<<*(l-1)<<endl;
	}
}
*/